<?xml version="1.0" ?>
<project>
  <macrodef name="properties-normalize"
      description="Normalizes properties files as follows:
          - Removes keys without values in properties files
          - Replaces the values on/true/yes with true
          - Replaces the values off/false/no with false">
    <attribute name="file"/>
    <sequential>
      <replaceregexp file="@{file}" byline="true"
          match="^\s*[\w\.]+\s*[=:]?\s*$" replace=""/>
      <replaceregexp file="@{file}" byline="true"
          match="^(\s*[\w\.]+\s*[=:]?\s*)(?i)(on|yes|true)\s*$" replace="\1true"/>
      <replaceregexp file="@{file}" byline="true"
          match="^(\s*[\w\.]+\s*[=:]?\s*)(?i)(off|no|false)\s*$" replace="\1false"/>
    </sequential>
  </macrodef>

  <macrodef name="placeholder-resolve">
    <attribute name="file"/>
    <sequential>
      <propertyselector property="properties" match="^(.{7}(?&lt;!module\.).*)$" select="\1"/>
      <for list="${properties}" param="placeholder">
        <sequential>
          <replace file="@{file}">
            <replacefilter token="#[@{placeholder}]" value="${@{placeholder}}"/>
          </replace>
        </sequential>
      </for>
      <replace file="@{file}">
        <replacefilter token="#[workspace.drive.file]" value="${workspace.drive.file}"/>
        <replacefilter token="#[workspace.drive.letter]" value="${workspace.drive.letter}"/>
        <replacefilter token="#[workspace.modules]" value="${workspace.modules}"/>
        <replacefilter token="#[workspace.modules.commons]" value="${workspace.modules.commons}"/>
        <replacefilter token="#[workspace.modules.startup]" value="${workspace.modules.startup}"/>
        <replacefilter token="#[workspace.modules.control]" value="${workspace.modules.control}"/>
        <replacefilter token="#[workspace.module.name]" value="${workspace.module.name}"/>
        <replacefilter token="#[release.modules]" value="${release.modules}"/>
      </replace>
    </sequential>
  </macrodef>

  <macrodef name="workfile-prepare">
    <attribute name="file"/>
    <sequential>
      <copy file="@{file}" tofile="___@{file}" overwrite="true"/>
      <placeholder-resolve file="___@{file}"/>
      <replaceregexp file="___@{file}" byline="false" flags="g"
          match="(diskpart\.\w+)" replace="___\1"/>
    </sequential>
  </macrodef>

  <macrodef name="mkdir-x">
    <attribute name="dir"/>
    <sequential>
      <delete dir="@{dir}"/>
      <mkdir dir="@{dir}"/>
    </sequential>
  </macrodef>
</project>